# The default system is on slurm used at Princeton
#
# seisDD 
# download devel branch seisDD from github
git clone https://github.com/yanhuay/seisDD --branch devel 
# set seisDD path
echo '# set seisDD path' >> ~/.bashrc
echo 'export seisDD=/path/of/seisDD' >> ~/.bashrc 
source ~/.bashrc
echo $seisDD
# make sure $seisDD is the same as '/path/to/seisDD' 

# with this specfem2d, I added an example of using tomo file to input attentuaton model
# compile with ifort and mpi
module load intel-mkl/11.0/1/64
module load intel/13.0/64/13.0.1.117
cd $seisDD/specfem2d
## with mpi (recommended) for parallel simulation
module load openmpi/intel-13.0/1.6.3/64
./configure FC=ifort --with-mpi
## without mpi for serial simulation (queue='serial') 
./configure FC=ifort 
## or 
./configure FC=gfortran
# compile
make all

cd $seisDD/seisDD/lib
make -f make_lib clean
make -f make_lib

# Experiments in paper:
#Double-difference adjoint seismic tomography
#YO Yuan, FJ Simons, J Tromp
#Geophysical Journal International (2016) accepted for publication
cd $seisDD/GJI2016
# For details, refer to https://github.com/yanhuay/seisDD/tree/master/GJI2016

#
# Addtional comments
# How to start your own project in user private folder under EXAMPLES (not afftected in updating)
>> cd $seisDD/EXAMPLES 
# checklist (see GJI2016/Exp1 for demonstration):
# DATA/: interfaces.dat  Par_file  SOURCE  sources.dat  STATIONS 
# model_init_bin: initial gll binary model 
# model_true_bin: target gll binary model (optional if observed data exist)
# data: obaserved data (optional if model_true_bin exists)
# parameter: inversion parameter file including path setting and inversion parameters
# SU_process: preprocessing procedure using SU package (optional)
# run_this_example.sh (shared for all examples)
#
# How to prepare gll model
# see specfem2d/EXAMPLES for demo
# 1. prepare tomo model on regular grids
  !
  ! ORIGIN_X ORIGIN_Z END_X END_Z
  ! SPACING_X SPACING_Z
  ! NX NZ
  ! VP_MIN VP_MAX VS_MIN VS_MAX RHO_MIN RHO_MAX QKappa_MIN QKappa_MAX Qmu_MIN Qmu_MAX  
  ! x(1) z(0) vp vs rho QKappa Qmu
  ! x(2) z(0) vp vs rho QKappa Qmu
  ! ...
  ! x(NX) z(0) vp vs rho QKappa Qmu
  ! x(1) z(1) vp vs rho QKappa Qmu
  ! x(2) z(1) vp vs rho QKappa Qmu
  ! ...
  ! x(NX) z(1) vp vs rho QKappa Qmu
  ! x(1) z(2) vp vs rho QKappa Qmu
  ! ...
  ! ...
  ! x(NX) z(NZ) vp vs rho QKappa Qmu
  !
# 2. specfem forward modeling, input tomo, output gll binary model
 vim DATA/Par_file
 MODEL = default
 SAVE_MODEL = binary
 nmodels=1
 1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0
 TOMOGRAPHY_FILE = /your/tomo/file
# output models are in DATA/proc00000****.bin
