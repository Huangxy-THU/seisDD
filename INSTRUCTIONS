# The default system is on slurm used at Princeton
#
# seisDD 
# download devel branch seisDD from github
git clone https://github.com/yanhuay/seisDD --branch devel 
# set seisDD path
echo '# set seisDD path' >> ~/.bashrc
echo 'export seisDD=/path/of/seisDD' >> ~/.bashrc 
source ~/.bashrc
echo $seisDD
# make sure $seisDD is the same as '/path/to/seisDD' 

## how to figure out the compiler for mpif90
$mpif90 -v
# specfem2d
# compile with your compiler and mpi
module load intel-mkl/11.0/1/64
module load intel/13.0/64/13.0.1.117
cd $seisDD/specfem2d
## with mpi for parallel simulation
module load openmpi/intel-13.0/1.6.3/64
./configure FC=${compiler} --with-mpi
## without mpi for serial simulation (queue='serial') 
./configure FC=gfortran
## or 
./configure FC=ifort
# compile
make all

cd $seisDD/seisDD/lib
make -f make_lib clean
make -f make_lib

# Experiments in paper:
#Double-difference adjoint seismic tomography
#YO Yuan, FJ Simons, J Tromp
#Geophysical Journal International (2016) accepted for publication
cd $seisDD/GJI2016
# For details, refer to https://github.com/yanhuay/seisDD/tree/master/GJI2016

#
# Addtional comments
# How to start your own project in user private folder under EXAMPLES (not afftected in updating)
>> cd $seisDD/EXAMPLES 
# checklist (see GJI2016/Exp1 for demonstration):
# DATA/: interfaces.dat  Par_file  SOURCE  sources.dat  STATIONS 
# model_init_bin: initial gll binary model 
# model_true_bin: target gll binary model (optional if observed data exist)
# data: obaserved data (optional if model_true_bin exists)
# parameter: inversion parameter file including path setting and inversion parameters
# SU_process: preprocessing procedure using SU package (optional)
# run_this_example.sh (shared for all examples)
#
# How to convert your own model on cartesian grid to SEM GLL grid
# see example in $seisDD/EXAMPLES/How-to-use-your-model
# Step one: modify DATA/Par_file (see example in $seisDD/EXAMPLES/How-to-use-your-model/DATA/Par_file)
#          MODEL = default
#          SAVE_MODEL= binary
#          #tomo example 
#          1 -1 1500 800 400 0 0 0 0 0 0 0 0 0 0
#          TOMOGRAPHY_FILE = ./DATA/tomo_file.xyz
# Step two: prepare tomo file 
# Formate of tomo file (example in $seisDD/EXAMPLES/How-to-use-your-model/model/tomo_file.xyz)
#! ORIGIN_X ORIGIN_Z END_X END_Z
#! SPACING_X SPACING_Z
#! NX NZ
#! VP_MIN VP_MAX VS_MIN VS_MAX RHO_MIN RHO_MAX
#! x(1) z(1) vp vs rho
#! x(2) z(1) vp vs rho
#! ...
#! x(NX) z(1) vp vs rho
#! x(1) z(2) vp vs rho
#! x(2) z(2) vp vs rho
#! ...
#! x(NX) z(2) vp vs rho
#! x(1) z(3) vp vs rho
#! ...
#! ...
#! x(NX) z(NZ) vp vs rho
# Step three: run forward simulation 
#             ./bin/xmeshfem2D 
#             mpirun -np $nproc ./bin/xspecfem2D
# SEM model can be found in DATA/proc*.bin             
# Step four: check generated SEM model 
# modify DATA/Par_file (see example in $seisDD/EXAMPLES/How-to-use-your-model/DATA/Par_file_binary)
#          MODEL = binary
#          SAVE_MODEL= default
#          #non tomo example 
#          1 1 1500 800 400 0 0 9999 9999 0 0 0 0 0 0
# run forward simulation
#             ./bin/xmeshfem2D 
#             mpirun -np $nproc ./bin/xspecfem2D
